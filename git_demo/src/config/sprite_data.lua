----------------------------------------------------
-- 此文件由数据工具生成
-- 精灵配置表--sprite_data.xml
--------------------------------------

Config = Config or {} 
Config.SpriteData = Config.SpriteData or {}

-- -------------------const_start-------------------
Config.SpriteData.data_const_length = 18
Config.SpriteData.data_const = {
	["sprite_unlocked_lv"] = {val=80, desc="精灵系统将在80级开放"},
	["hatch_desc"] = {val=1, desc="Lv.<div fontcolor=#32CD32>0</div>；<div fontcolor=#32CD32>11</div>秒减一点孵化点；<div fontcolor=#32CD32>0</div>钻石；需要vip<div fontcolor=#32CD32>0</div>\nLv.<div fontcolor=#32CD32>1</div>；<div fontcolor=#32CD32>10</div>秒减一点孵化点；<div fontcolor=#32CD32>100</div>钻石；需要vip<div fontcolor=#32CD32>0</div>\nLv.<div fontcolor=#32CD32>2</div>；<div fontcolor=#32CD32>9</div>秒减一点孵化点；<div fontcolor=#32CD32>200</div>钻石；需要vip<div fontcolor=#32CD32>1</div>\nLv.<div fontcolor=#32CD32>3</div>；<div fontcolor=#32CD32>8</div>秒减一点孵化点；<div fontcolor=#32CD32>500</div>钻石；需要vip<div fontcolor=#32CD32>3</div>\nLv.<div fontcolor=#32CD32>4</div>；<div fontcolor=#32CD32>7</div>秒减一点孵化点；<div fontcolor=#32CD32>800</div>钻石；需要vip<div fontcolor=#32CD32>4</div>\nLv.<div fontcolor=#32CD32>5</div>；<div fontcolor=#32CD32>6</div>秒减一点孵化点；<div fontcolor=#32CD32>1200</div>钻石；需要vip<div fontcolor=#32CD32>5</div>\nLv.<div fontcolor=#32CD32>6</div>；<div fontcolor=#32CD32>5</div>秒减一点孵化点；<div fontcolor=#32CD32>1600</div>钻石；需要vip<div fontcolor=#32CD32>6</div>"},
	["ancient_desc"] = {val=1, desc="1.每个精灵都携带一种<div fontcolor=#32CD32>专属技能</div>，精灵融合可提升技能等级。\n2.玩家可以将精灵依附在古树上，借助古树的属性。\n3.依附在古树上的精灵，将作为特殊作战单位，在战斗中协同作战。\n4.古树唤醒后可解锁更多供精灵依附的位置。\n5.同名精灵只能依附<div fontcolor=#32CD32>一个</div>在古树身上。\n6.精灵的位置，决定了其技能在战斗中的<div fontcolor=#32CD32>施法顺序</div>。\n7.精灵通过<div fontcolor=#32CD32>精灵蛋孵化</div>获取，将精灵蛋置于灵窝中，等待一段时间随机孵化出一只精灵。\n8.通过<div fontcolor=#32CD32>挂机奖励、萌宠出行、冠军商店、活动、补充</div>等途径可获得相应数量的精灵蛋。\n9.除了正常孵化以外，多余精灵的<div fontcolor=#32CD32>羽化</div>也可以转化为古树复苏所需的奥术之尘。"},
	["ancient_story"] = {val=1, desc="卡达尔森林的中心屹立着一棵参天大树，精灵族视其为守护之树，并尊称其为“费普斯”。\n费普斯庇护着精灵一族生存的森林，而精灵们也以天生的精灵之力反哺费普斯，让其得以延续生命。\n没人能说得清费普斯已经存活了多少岁月了，就连费普斯也不能。现在的它只能记得那场大战几乎毁灭了所有的生命，众神陨落，旺盛如世界树无法逃避凋零的命运，神树费普斯自然也无法幸免于难。\n但某一天，费普斯发现自己竟然在一片绿意盎然的森林中醒来。只剩下枯枝残叶的身躯与周围显得格格不入，但这样的身躯之上竟然有小精灵居住着。\n感受着精灵们身上的充沛的精灵气息，费普斯突然明白了自己为何能够在沉睡中复苏，它对着居住在身上的小精灵们笑了笑，僵硬的树干让这个笑容看起来有点阴森。\n有着源源不断充沛的精灵之力，自己很快就能恢复到原来枝繁叶茂的模样，费普斯这样想着，卡达尔森林中传出了低沉的笑声。"},
	["egg_buy_limit"] = {val=1, desc="蛋蛋购买次数/每日"},
	["egg_buy_price"] = {val={10603,{{3,2000000}}}, desc="蛋蛋购买价格 （itemid_钻石价格）"},
	["prop_buy_limit"] = {val=2, desc="加速道具购买次数/每日"},
	["prop_buy_price"] = {val={10701,{{3,100}}}, desc="加速道具购买价格 (itemid_钻石价格）"},
	["awake_gain"] = {val=10042, desc=""},
	["daily_free_gift"] = {val={{10601,2}}, desc="特权每日赠送道具"},
	["end_time"] = {val=1300, desc="孵化结束时，光效开始播放n毫秒后，请求弹窗。"},
	["reborn_exhibition"] = {val={{39067,1},{10040,1}}, desc="精灵重生获得预览"},
	["reborn_tips"] = {val=1, desc="1.本期限时重生只能选择<div fontcolor=#32CD32>圣林行者</div>与<div fontcolor=#32CD32>冰岩巨兽</div>,但无法重生一级圣林行者与一级冰岩巨兽\n2.重生会保留<div fontcolor=#32CD32>1个</div>一级精灵本体\n3.重生返还等同于精灵培养消耗所需本体数量的精灵之魂与全部奥术之尘\n4.精灵之魂能自选兑换除本期重生精灵外的任意现有的橙色精灵\n5.本期活动结束时间：<div fontcolor=#32CD32>2020年1月16号 0点</div>"},
	["sprite_max_star_show"] = {val=5, desc="图鉴显示最大星级"},
	["hatch_rate"] = {val=5, desc="孵化效率"},
	["free_programmes"] = {val=2, desc="精灵管理方案免费数量"},
	["total_programmes"] = {val=10, desc="精灵管理总方案数量"},
	["programme_add_cost"] = {val={3,300}, desc="精灵管理开启方案价格"}
}
Config.SpriteData.data_const_fun = function(key)
	local data=Config.SpriteData.data_const[key]
	if DATA_DEBUG and data == nil then
		print('(Config.SpriteData.data_const['..key..'])not found') return
	end
	return data
end
-- -------------------const_end---------------------


-- -------------------hatch_data_start-------------------
Config.SpriteData.data_hatch_data_length = 6
Config.SpriteData.data_hatch_data = {
	[1] = {hatch_cond={'lev',80}, name="第一灵窝", res_id=1, sort=1, expend={}, desc1="", desc2=""},
	[4] = {hatch_cond={'sprite_tree_lv',15}, name="第二灵窝", res_id=1, sort=2, expend={{3,50}}, desc1="古树15级", desc2="古树达15级开启"},
	[5] = {hatch_cond={'has_any_sprite',{113201,113202,113203,113204,113205,113206,113207,113208}}, name="第三灵窝", res_id=1, sort=3, expend={{3,100}}, desc1="3星橙精灵", desc2="获得一个3星橙精灵开启"},
	[6] = {hatch_cond={'sprite_power',1200}, name="第四灵窝", res_id=1, sort=4, expend={{3,200}}, desc1="精灵总评分", desc2="上阵精灵总评分达1200开启"},
	[2] = {hatch_cond={'privilege',5}, name="特权灵窝", res_id=2, sort=5, expend={}, desc1="特权激活", desc2="激活孵化特权开启"},
	[3] = {hatch_cond={'privilege',5}, name="特权灵窝", res_id=2, sort=6, expend={}, desc1="特权激活", desc2="激活孵化特权开启"}
}
Config.SpriteData.data_hatch_data_fun = function(key)
	local data=Config.SpriteData.data_hatch_data[key]
	if DATA_DEBUG and data == nil then
		print('(Config.SpriteData.data_hatch_data['..key..'])not found') return
	end
	return data
end
-- -------------------hatch_data_end---------------------


-- -------------------hatch_lev_start-------------------
Config.SpriteData.data_hatch_lev_length = 7
Config.SpriteData.data_hatch_lev = {
	[0] = {lev=0, limit_vip=0, expend={{3,0}}, do_time=0, award={}},
	[1] = {lev=1, limit_vip=0, expend={{3,100}}, do_time=0, award={{3,100}}},
	[2] = {lev=2, limit_vip=1, expend={{3,200}}, do_time=0, award={{3,300}}},
	[3] = {lev=3, limit_vip=3, expend={{3,500}}, do_time=0, award={{3,800}}},
	[4] = {lev=4, limit_vip=4, expend={{3,800}}, do_time=0, award={{3,1600}}},
	[5] = {lev=5, limit_vip=5, expend={{3,1200}}, do_time=0, award={{3,2800}}},
	[6] = {lev=6, limit_vip=6, expend={{3,1600}}, do_time=0, award={{3,4400}}}
}
Config.SpriteData.data_hatch_lev_fun = function(key)
	local data=Config.SpriteData.data_hatch_lev[key]
	if DATA_DEBUG and data == nil then
		print('(Config.SpriteData.data_hatch_lev['..key..'])not found') return
	end
	return data
end
-- -------------------hatch_lev_end---------------------


-- -------------------hatch_egg_start-------------------
Config.SpriteData.data_hatch_egg_length = 3
Config.SpriteData.data_hatch_egg = {
	[10601] = {item_bid=10601, need_piont=2880, drop_id1={81001}, drop_id2={}, award={}, res_id=2, desc="蓝精灵95% 紫精灵4% 橙精灵1%", can_buy=1, price={{1,1200000}}, limit_num=30, reset_award={{10601,1}}},
	[10602] = {item_bid=10602, need_piont=5760, drop_id1={81002}, drop_id2={}, award={{10040,3}}, res_id=3, desc="蓝精灵75% 紫精灵22% 橙精灵3%", can_buy=1, price={{3,300}}, limit_num=5, reset_award={{10601,2}}},
	[10603] = {item_bid=10603, need_piont=8640, drop_id1={81003}, drop_id2={}, award={{10040,6}}, res_id=1, desc="紫精灵92.8% 橙精灵7.2% <div fontcolor=#e25a00>（15次必出橙）</div>", can_buy=0, price={}, limit_num=0, reset_award={{10602,2}}}
}
Config.SpriteData.data_hatch_egg_fun = function(key)
	local data=Config.SpriteData.data_hatch_egg[key]
	if DATA_DEBUG and data == nil then
		print('(Config.SpriteData.data_hatch_egg['..key..'])not found') return
	end
	return data
end
-- -------------------hatch_egg_end---------------------


-- -------------------smash_item_start-------------------
Config.SpriteData.data_smash_item_length = 3
Config.SpriteData.data_smash_item = {
	[10701] = {item_bid=10701, del_piont=2592, desc="使用立即减少孵化点", res_id="elfin_1026", can_buy=1, price={{3,15}}, limit_num=20},
	[10702] = {item_bid=10702, del_piont=12960, desc="使用立即减少孵化点", res_id="elfin_1028", can_buy=1, price={{3,75}}, limit_num=20},
	[10703] = {item_bid=10703, del_piont=25920, desc="使用立即减少孵化点", res_id="elfin_1027", can_buy=1, price={{3,150}}, limit_num=20}
}
Config.SpriteData.data_smash_item_fun = function(key)
	local data=Config.SpriteData.data_smash_item[key]
	if DATA_DEBUG and data == nil then
		print('(Config.SpriteData.data_smash_item['..key..'])not found') return
	end
	return data
end
-- -------------------smash_item_end---------------------


-- -------------------elfin_data_start-------------------
Config.SpriteData.data_elfin_data_length = 85
Config.SpriteData.data_elfin_data_cache = {}
Config.SpriteData.data_elfin_data = function(key)
	if Config.SpriteData.data_elfin_data_cache[key] == nil then
		local base = Config.SpriteData.data_elfin_data_table[key]
		if not base then return end
		base = loadstring(string.format('return %s',base))()
		if not base then return end
		Config.SpriteData.data_elfin_data_cache[key] = {
			id = base[1],
			skill = base[2],
			step = base[3],
			effect_id = base[4],
			sprite_type = base[5],
			icon = base[6],
			scale_val = base[7],
			offset_y = base[8],
			power = base[9],
		}
	end
	return Config.SpriteData.data_elfin_data_cache[key] 
end
Config.SpriteData.data_elfin_data_table = {
	[113408] = [[{113408, 23085, 5, "E70018", 17, 113008, 1, "-15", 5500}]],
	[113407] = [[{113407, 23075, 5, "E70017", 16, 113007, 1, "-15", 5500}]],
	[113406] = [[{113406, 23065, 5, "E70016", 15, 113006, 1, "-15", 5500}]],
	[113405] = [[{113405, 23055, 5, "E70014", 14, 113005, 1, "-15", 5500}]],
	[113404] = [[{113404, 23045, 5, "E70013", 13, 113004, 1, "-15", 5500}]],
	[113403] = [[{113403, 23035, 5, "E70012", 12, 113003, 1, "-15", 5225}]],
	[113402] = [[{113402, 23025, 5, "E70011", 11, 113002, 1, "-20", 5500}]],
	[113401] = [[{113401, 23015, 5, "E70010", 10, 113001, 1, "-15", 5225}]],
	[112404] = [[{112404, 22045, 5, "E70009", 9, 112004, 1, "0", 1650}]],
	[112403] = [[{112403, 22035, 5, "E70008", 8, 112003, 1, "-10", 1650}]],
	[112402] = [[{112402, 22025, 5, "E70007", 7, 112002, 1, "-10", 1650}]],
	[112401] = [[{112401, 22015, 5, "E70006", 6, 112001, 1, "20", 1650}]],
	[111405] = [[{111405, 21055, 5, "E70005", 5, 111005, 1, "0", 550}]],
	[111404] = [[{111404, 21045, 5, "E70004", 4, 111004, 1, "20", 825}]],
	[111403] = [[{111403, 21035, 5, "E70003", 3, 111003, 1, "20", 825}]],
	[111402] = [[{111402, 21025, 5, "E70002", 2, 111002, 1, "20", 550}]],
	[111401] = [[{111401, 21015, 5, "E70001", 1, 111001, 1, "-10", 550}]],
	[113308] = [[{113308, 23084, 4, "E70018", 17, 113008, 1, "-15", 3500}]],
	[113307] = [[{113307, 23074, 4, "E70017", 16, 113007, 1, "-15", 3500}]],
	[113306] = [[{113306, 23064, 4, "E70016", 15, 113006, 1, "-15", 3500}]],
	[113305] = [[{113305, 23054, 4, "E70014", 14, 113005, 1, "-15", 3500}]],
	[113304] = [[{113304, 23044, 4, "E70013", 13, 113004, 1, "-15", 3500}]],
	[113303] = [[{113303, 23034, 4, "E70012", 12, 113003, 1, "-15", 3325}]],
	[113302] = [[{113302, 23024, 4, "E70011", 11, 113002, 1, "-20", 3500}]],
	[113301] = [[{113301, 23014, 4, "E70010", 10, 113001, 1, "-15", 3325}]],
	[112304] = [[{112304, 22044, 4, "E70009", 9, 112004, 1, "0", 1050}]],
	[112303] = [[{112303, 22034, 4, "E70008", 8, 112003, 1, "-10", 1050}]],
	[112302] = [[{112302, 22024, 4, "E70007", 7, 112002, 1, "-10", 1050}]],
	[112301] = [[{112301, 22014, 4, "E70006", 6, 112001, 1, "20", 1050}]],
	[111305] = [[{111305, 21054, 4, "E70005", 5, 111005, 1, "0", 350}]],
	[111304] = [[{111304, 21044, 4, "E70004", 4, 111004, 1, "20", 525}]],
	[111303] = [[{111303, 21034, 4, "E70003", 3, 111003, 1, "20", 525}]],
	[111302] = [[{111302, 21024, 4, "E70002", 2, 111002, 1, "20", 350}]],
	[111301] = [[{111301, 21014, 4, "E70001", 1, 111001, 1, "-10", 350}]],
	[113208] = [[{113208, 23083, 3, "E70018", 17, 113008, 1, "-15", 2000}]],
	[113207] = [[{113207, 23073, 3, "E70017", 16, 113007, 1, "-15", 2000}]],
	[113206] = [[{113206, 23063, 3, "E70016", 15, 113006, 1, "-15", 2000}]],
	[113205] = [[{113205, 23053, 3, "E70014", 14, 113005, 1, "-15", 2000}]],
	[113204] = [[{113204, 23043, 3, "E70013", 13, 113004, 1, "-15", 2000}]],
	[113203] = [[{113203, 23033, 3, "E70012", 12, 113003, 1, "-15", 1900}]],
	[113202] = [[{113202, 23023, 3, "E70011", 11, 113002, 1, "-20", 2000}]],
	[113201] = [[{113201, 23013, 3, "E70010", 10, 113001, 1, "-15", 1900}]],
	[112204] = [[{112204, 22043, 3, "E70009", 9, 112004, 1, "0", 600}]],
	[112203] = [[{112203, 22033, 3, "E70008", 8, 112003, 1, "-10", 600}]],
	[112202] = [[{112202, 22023, 3, "E70007", 7, 112002, 1, "-10", 600}]],
	[112201] = [[{112201, 22013, 3, "E70006", 6, 112001, 1, "20", 600}]],
	[111205] = [[{111205, 21053, 3, "E70005", 5, 111005, 1, "0", 200}]],
	[111204] = [[{111204, 21043, 3, "E70004", 4, 111004, 1, "20", 300}]],
	[111203] = [[{111203, 21033, 3, "E70003", 3, 111003, 1, "20", 300}]],
	[111202] = [[{111202, 21023, 3, "E70002", 2, 111002, 1, "20", 200}]],
	[111201] = [[{111201, 21013, 3, "E70001", 1, 111001, 1, "-10", 200}]],
	[113108] = [[{113108, 23082, 2, "E70018", 17, 113008, 1, "-15", 1000}]],
	[113107] = [[{113107, 23072, 2, "E70017", 16, 113007, 1, "-15", 1000}]],
	[113106] = [[{113106, 23062, 2, "E70016", 15, 113006, 1, "-15", 1000}]],
	[113105] = [[{113105, 23052, 2, "E70014", 14, 113005, 1, "-15", 1000}]],
	[113104] = [[{113104, 23042, 2, "E70013", 13, 113004, 1, "-15", 1000}]],
	[113103] = [[{113103, 23032, 2, "E70012", 12, 113003, 1, "-15", 950}]],
	[113102] = [[{113102, 23022, 2, "E70011", 11, 113002, 1, "-20", 1000}]],
	[113101] = [[{113101, 23012, 2, "E70010", 10, 113001, 1, "-15", 950}]],
	[112104] = [[{112104, 22042, 2, "E70009", 9, 112004, 1, "0", 300}]],
	[112103] = [[{112103, 22032, 2, "E70008", 8, 112003, 1, "-10", 300}]],
	[112102] = [[{112102, 22022, 2, "E70007", 7, 112002, 1, "-10", 300}]],
	[112101] = [[{112101, 22012, 2, "E70006", 6, 112001, 1, "20", 300}]],
	[111105] = [[{111105, 21052, 2, "E70005", 5, 111005, 1, "0", 100}]],
	[111104] = [[{111104, 21042, 2, "E70004", 4, 111004, 1, "20", 150}]],
	[111103] = [[{111103, 21032, 2, "E70003", 3, 111003, 1, "20", 150}]],
	[111102] = [[{111102, 21022, 2, "E70002", 2, 111002, 1, "20", 100}]],
	[111101] = [[{111101, 21012, 2, "E70001", 1, 111001, 1, "-10", 100}]],
	[113008] = [[{113008, 23081, 1, "E70018", 17, 113008, 1, "-15", 500}]],
	[113007] = [[{113007, 23071, 1, "E70017", 16, 113007, 1, "-15", 500}]],
	[113006] = [[{113006, 23061, 1, "E70016", 15, 113006, 1, "-15", 500}]],
	[113005] = [[{113005, 23051, 1, "E70014", 14, 113005, 1, "-15", 500}]],
	[113004] = [[{113004, 23041, 1, "E70013", 13, 113004, 1, "-15", 500}]],
	[113003] = [[{113003, 23031, 1, "E70012", 12, 113003, 1, "-15", 475}]],
	[113002] = [[{113002, 23021, 1, "E70011", 11, 113002, 1, "-20", 500}]],
	[113001] = [[{113001, 23011, 1, "E70010", 10, 113001, 1, "-15", 475}]],
	[112004] = [[{112004, 22041, 1, "E70009", 9, 112004, 1, "0", 150}]],
	[112003] = [[{112003, 22031, 1, "E70008", 8, 112003, 1, "-10", 150}]],
	[112002] = [[{112002, 22021, 1, "E70007", 7, 112002, 1, "-10", 150}]],
	[112001] = [[{112001, 22011, 1, "E70006", 6, 112001, 1, "20", 150}]],
	[111005] = [[{111005, 21051, 1, "E70005", 5, 111005, 1, "0", 50}]],
	[111004] = [[{111004, 21041, 1, "E70004", 4, 111004, 1, "20", 75}]],
	[111003] = [[{111003, 21031, 1, "E70003", 3, 111003, 1, "20", 75}]],
	[111002] = [[{111002, 21021, 1, "E70002", 2, 111002, 1, "20", 50}]],
	[111001] = [[{111001, 21011, 1, "E70001", 1, 111001, 1, "-10", 50}]]
}
-- -------------------elfin_data_end---------------------


-- -------------------elfin_book_start-------------------
Config.SpriteData.data_elfin_book_length = 5
Config.SpriteData.data_elfin_book = {
	[5] = {111401,
		111402,
		111403,
		111404,
		111405,
		112401,
		112402,
		112403,
		112404,
		113401,
		113402,
		113403,
		113404,
		113405,
		113406,
		113407,
		113408
	},
	[4] = {111301,
		111302,
		111303,
		111304,
		111305,
		112301,
		112302,
		112303,
		112304,
		113301,
		113302,
		113303,
		113304,
		113305,
		113306,
		113307,
		113308
	},
	[3] = {111201,
		111202,
		111203,
		111204,
		111205,
		112201,
		112202,
		112203,
		112204,
		113201,
		113202,
		113203,
		113204,
		113205,
		113206,
		113207,
		113208
	},
	[2] = {111101,
		111102,
		111103,
		111104,
		111105,
		112101,
		112102,
		112103,
		112104,
		113101,
		113102,
		113103,
		113104,
		113105,
		113106,
		113107,
		113108
	},
	[1] = {111001,
		111002,
		111003,
		111004,
		111005,
		112001,
		112002,
		112003,
		112004,
		113001,
		113002,
		113003,
		113004,
		113005,
		113006,
		113007,
		113008
	},
}
-- -------------------elfin_book_end---------------------


-- -------------------elfin_skill_start-------------------
Config.SpriteData.data_elfin_skill_length = 85
Config.SpriteData.data_elfin_skill = {
	[21011] = "E70001",
	[21021] = "E70002",
	[21031] = "E70003",
	[21041] = "E70004",
	[21051] = "E70005",
	[22011] = "E70006",
	[22021] = "E70007",
	[22031] = "E70008",
	[22041] = "E70009",
	[23011] = "E70010",
	[23021] = "E70011",
	[23031] = "E70012",
	[23041] = "E70013",
	[23051] = "E70014",
	[23061] = "E70016",
	[23071] = "E70017",
	[23081] = "E70018",
	[21012] = "E70001",
	[21022] = "E70002",
	[21032] = "E70003",
	[21042] = "E70004",
	[21052] = "E70005",
	[22012] = "E70006",
	[22022] = "E70007",
	[22032] = "E70008",
	[22042] = "E70009",
	[23012] = "E70010",
	[23022] = "E70011",
	[23032] = "E70012",
	[23042] = "E70013",
	[23052] = "E70014",
	[23062] = "E70016",
	[23072] = "E70017",
	[23082] = "E70018",
	[21013] = "E70001",
	[21023] = "E70002",
	[21033] = "E70003",
	[21043] = "E70004",
	[21053] = "E70005",
	[22013] = "E70006",
	[22023] = "E70007",
	[22033] = "E70008",
	[22043] = "E70009",
	[23013] = "E70010",
	[23023] = "E70011",
	[23033] = "E70012",
	[23043] = "E70013",
	[23053] = "E70014",
	[23063] = "E70016",
	[23073] = "E70017",
	[23083] = "E70018",
	[21014] = "E70001",
	[21024] = "E70002",
	[21034] = "E70003",
	[21044] = "E70004",
	[21054] = "E70005",
	[22014] = "E70006",
	[22024] = "E70007",
	[22034] = "E70008",
	[22044] = "E70009",
	[23014] = "E70010",
	[23024] = "E70011",
	[23034] = "E70012",
	[23044] = "E70013",
	[23054] = "E70014",
	[23064] = "E70016",
	[23074] = "E70017",
	[23084] = "E70018",
	[21015] = "E70001",
	[21025] = "E70002",
	[21035] = "E70003",
	[21045] = "E70004",
	[21055] = "E70005",
	[22015] = "E70006",
	[22025] = "E70007",
	[22035] = "E70008",
	[22045] = "E70009",
	[23015] = "E70010",
	[23025] = "E70011",
	[23035] = "E70012",
	[23045] = "E70013",
	[23055] = "E70014",
	[23065] = "E70016",
	[23075] = "E70017",
	[23085] = "E70018",
}
-- -------------------elfin_skill_end---------------------


-- -------------------elfin_skill_icon_start-------------------
Config.SpriteData.data_elfin_skill_icon_length = 85
Config.SpriteData.data_elfin_skill_icon = {
	[21011] = 111001,
	[21021] = 111002,
	[21031] = 111003,
	[21041] = 111004,
	[21051] = 111005,
	[22011] = 112001,
	[22021] = 112002,
	[22031] = 112003,
	[22041] = 112004,
	[23011] = 113001,
	[23021] = 113002,
	[23031] = 113003,
	[23041] = 113004,
	[23051] = 113005,
	[23061] = 113006,
	[23071] = 113007,
	[23081] = 113008,
	[21012] = 111001,
	[21022] = 111002,
	[21032] = 111003,
	[21042] = 111004,
	[21052] = 111005,
	[22012] = 112001,
	[22022] = 112002,
	[22032] = 112003,
	[22042] = 112004,
	[23012] = 113001,
	[23022] = 113002,
	[23032] = 113003,
	[23042] = 113004,
	[23052] = 113005,
	[23062] = 113006,
	[23072] = 113007,
	[23082] = 113008,
	[21013] = 111001,
	[21023] = 111002,
	[21033] = 111003,
	[21043] = 111004,
	[21053] = 111005,
	[22013] = 112001,
	[22023] = 112002,
	[22033] = 112003,
	[22043] = 112004,
	[23013] = 113001,
	[23023] = 113002,
	[23033] = 113003,
	[23043] = 113004,
	[23053] = 113005,
	[23063] = 113006,
	[23073] = 113007,
	[23083] = 113008,
	[21014] = 111001,
	[21024] = 111002,
	[21034] = 111003,
	[21044] = 111004,
	[21054] = 111005,
	[22014] = 112001,
	[22024] = 112002,
	[22034] = 112003,
	[22044] = 112004,
	[23014] = 113001,
	[23024] = 113002,
	[23034] = 113003,
	[23044] = 113004,
	[23054] = 113005,
	[23064] = 113006,
	[23074] = 113007,
	[23084] = 113008,
	[21015] = 111001,
	[21025] = 111002,
	[21035] = 111003,
	[21045] = 111004,
	[21055] = 111005,
	[22015] = 112001,
	[22025] = 112002,
	[22035] = 112003,
	[22045] = 112004,
	[23015] = 113001,
	[23025] = 113002,
	[23035] = 113003,
	[23045] = 113004,
	[23055] = 113005,
	[23065] = 113006,
	[23075] = 113007,
	[23085] = 113008,
}
-- -------------------elfin_skill_icon_end---------------------


-- -------------------tree_attr_start-------------------
Config.SpriteData.data_tree_attr_length = 1
Config.SpriteData.data_tree_attr = {
{hp_max=34450, atk=5642, def=200, speed=100, crit_rate=2000, crit_ratio=1200, hit_magic=0, dodge_magic=0, hit_rate=9999, dodge_rate=0, add_hp=405504, add_atk=115200, add_def=10000, add_speed=5000}
}
-- -------------------tree_attr_end---------------------


-- -------------------tree_up_lv_start-------------------
Config.SpriteData.data_tree_up_lv_length = 200
Config.SpriteData.data_tree_up_lv_cache = {}
Config.SpriteData.data_tree_up_lv = function(key)
	if Config.SpriteData.data_tree_up_lv_cache[key] == nil then
		local base = Config.SpriteData.data_tree_up_lv_table[key]
		if not base then return end
		base = loadstring(string.format('return %s',base))()
		if not base then return end
		Config.SpriteData.data_tree_up_lv_cache[key] = {
			lev = base[1],
			expend = base[2],
		}
	end
	return Config.SpriteData.data_tree_up_lv_cache[key] 
end
Config.SpriteData.data_tree_up_lv_table = {
	[200] = [[{200, {}}]],
	[199] = [[{199, {{10040,370},{1,18500000}}}]],
	[198] = [[{198, {{10040,368},{1,18400000}}}]],
	[197] = [[{197, {{10040,366},{1,18300000}}}]],
	[196] = [[{196, {{10040,364},{1,18200000}}}]],
	[195] = [[{195, {{10040,362},{1,18100000}}}]],
	[194] = [[{194, {{10040,360},{1,18000000}}}]],
	[193] = [[{193, {{10040,358},{1,17900000}}}]],
	[192] = [[{192, {{10040,356},{1,17800000}}}]],
	[191] = [[{191, {{10040,354},{1,17700000}}}]],
	[190] = [[{190, {{10040,352},{1,17600000}}}]],
	[189] = [[{189, {{10040,350},{1,17500000}}}]],
	[188] = [[{188, {{10040,348},{1,17400000}}}]],
	[187] = [[{187, {{10040,346},{1,17300000}}}]],
	[186] = [[{186, {{10040,344},{1,17200000}}}]],
	[185] = [[{185, {{10040,342},{1,17100000}}}]],
	[184] = [[{184, {{10040,340},{1,17000000}}}]],
	[183] = [[{183, {{10040,338},{1,16900000}}}]],
	[182] = [[{182, {{10040,336},{1,16800000}}}]],
	[181] = [[{181, {{10040,334},{1,16700000}}}]],
	[180] = [[{180, {{10040,332},{1,16600000}}}]],
	[179] = [[{179, {{10040,330},{1,16500000}}}]],
	[178] = [[{178, {{10040,328},{1,16400000}}}]],
	[177] = [[{177, {{10040,326},{1,16300000}}}]],
	[176] = [[{176, {{10040,324},{1,16200000}}}]],
	[175] = [[{175, {{10040,322},{1,16100000}}}]],
	[174] = [[{174, {{10040,320},{1,16000000}}}]],
	[173] = [[{173, {{10040,318},{1,15900000}}}]],
	[172] = [[{172, {{10040,316},{1,15800000}}}]],
	[171] = [[{171, {{10040,314},{1,15700000}}}]],
	[170] = [[{170, {{10040,312},{1,15600000}}}]],
	[169] = [[{169, {{10040,310},{1,15500000}}}]],
	[168] = [[{168, {{10040,308},{1,15400000}}}]],
	[167] = [[{167, {{10040,306},{1,15300000}}}]],
	[166] = [[{166, {{10040,304},{1,15200000}}}]],
	[165] = [[{165, {{10040,302},{1,15100000}}}]],
	[164] = [[{164, {{10040,300},{1,15000000}}}]],
	[163] = [[{163, {{10040,298},{1,14900000}}}]],
	[162] = [[{162, {{10040,296},{1,14800000}}}]],
	[161] = [[{161, {{10040,294},{1,14700000}}}]],
	[160] = [[{160, {{10040,292},{1,14600000}}}]],
	[159] = [[{159, {{10040,290},{1,14500000}}}]],
	[158] = [[{158, {{10040,288},{1,14400000}}}]],
	[157] = [[{157, {{10040,286},{1,14300000}}}]],
	[156] = [[{156, {{10040,284},{1,14200000}}}]],
	[155] = [[{155, {{10040,282},{1,14100000}}}]],
	[154] = [[{154, {{10040,280},{1,14000000}}}]],
	[153] = [[{153, {{10040,278},{1,13900000}}}]],
	[152] = [[{152, {{10040,276},{1,13800000}}}]],
	[151] = [[{151, {{10040,274},{1,13700000}}}]],
	[150] = [[{150, {{10040,272},{1,13600000}}}]],
	[149] = [[{149, {{10040,270},{1,13500000}}}]],
	[148] = [[{148, {{10040,268},{1,13400000}}}]],
	[147] = [[{147, {{10040,266},{1,13300000}}}]],
	[146] = [[{146, {{10040,264},{1,13200000}}}]],
	[145] = [[{145, {{10040,262},{1,13100000}}}]],
	[144] = [[{144, {{10040,260},{1,13000000}}}]],
	[143] = [[{143, {{10040,258},{1,12900000}}}]],
	[142] = [[{142, {{10040,256},{1,12800000}}}]],
	[141] = [[{141, {{10040,254},{1,12700000}}}]],
	[140] = [[{140, {{10040,252},{1,12600000}}}]],
	[139] = [[{139, {{10040,250},{1,12500000}}}]],
	[138] = [[{138, {{10040,248},{1,12400000}}}]],
	[137] = [[{137, {{10040,246},{1,12300000}}}]],
	[136] = [[{136, {{10040,244},{1,12200000}}}]],
	[135] = [[{135, {{10040,242},{1,12100000}}}]],
	[134] = [[{134, {{10040,240},{1,12000000}}}]],
	[133] = [[{133, {{10040,238},{1,11900000}}}]],
	[132] = [[{132, {{10040,236},{1,11800000}}}]],
	[131] = [[{131, {{10040,234},{1,11700000}}}]],
	[130] = [[{130, {{10040,232},{1,11600000}}}]],
	[129] = [[{129, {{10040,230},{1,11500000}}}]],
	[128] = [[{128, {{10040,228},{1,11400000}}}]],
	[127] = [[{127, {{10040,226},{1,11300000}}}]],
	[126] = [[{126, {{10040,224},{1,11200000}}}]],
	[125] = [[{125, {{10040,222},{1,11100000}}}]],
	[124] = [[{124, {{10040,220},{1,11000000}}}]],
	[123] = [[{123, {{10040,218},{1,10900000}}}]],
	[122] = [[{122, {{10040,216},{1,10800000}}}]],
	[121] = [[{121, {{10040,214},{1,10700000}}}]],
	[120] = [[{120, {{10040,212},{1,10600000}}}]],
	[119] = [[{119, {{10040,210},{1,10500000}}}]],
	[118] = [[{118, {{10040,208},{1,10400000}}}]],
	[117] = [[{117, {{10040,206},{1,10300000}}}]],
	[116] = [[{116, {{10040,204},{1,10200000}}}]],
	[115] = [[{115, {{10040,202},{1,10100000}}}]],
	[114] = [[{114, {{10040,200},{1,10000000}}}]],
	[113] = [[{113, {{10040,198},{1,9900000}}}]],
	[112] = [[{112, {{10040,196},{1,9800000}}}]],
	[111] = [[{111, {{10040,194},{1,9700000}}}]],
	[110] = [[{110, {{10040,192},{1,9600000}}}]],
	[109] = [[{109, {{10040,190},{1,9500000}}}]],
	[108] = [[{108, {{10040,188},{1,9400000}}}]],
	[107] = [[{107, {{10040,186},{1,9300000}}}]],
	[106] = [[{106, {{10040,184},{1,9200000}}}]],
	[105] = [[{105, {{10040,182},{1,9100000}}}]],
	[104] = [[{104, {{10040,180},{1,9000000}}}]],
	[103] = [[{103, {{10040,178},{1,8900000}}}]],
	[102] = [[{102, {{10040,176},{1,8800000}}}]],
	[101] = [[{101, {{10040,174},{1,8700000}}}]],
	[100] = [[{100, {{10040,172},{1,8600000}}}]],
	[99] = [[{99, {{10040,170},{1,8500000}}}]],
	[98] = [[{98, {{10040,168},{1,8400000}}}]],
	[97] = [[{97, {{10040,166},{1,8300000}}}]],
	[96] = [[{96, {{10040,164},{1,8200000}}}]],
	[95] = [[{95, {{10040,162},{1,8100000}}}]],
	[94] = [[{94, {{10040,160},{1,8000000}}}]],
	[93] = [[{93, {{10040,158},{1,7900000}}}]],
	[92] = [[{92, {{10040,156},{1,7800000}}}]],
	[91] = [[{91, {{10040,154},{1,7700000}}}]],
	[90] = [[{90, {{10040,152},{1,7600000}}}]],
	[89] = [[{89, {{10040,150},{1,7500000}}}]],
	[88] = [[{88, {{10040,148},{1,7400000}}}]],
	[87] = [[{87, {{10040,146},{1,7300000}}}]],
	[86] = [[{86, {{10040,144},{1,7200000}}}]],
	[85] = [[{85, {{10040,142},{1,7100000}}}]],
	[84] = [[{84, {{10040,140},{1,7000000}}}]],
	[83] = [[{83, {{10040,138},{1,6900000}}}]],
	[82] = [[{82, {{10040,136},{1,6800000}}}]],
	[81] = [[{81, {{10040,134},{1,6700000}}}]],
	[80] = [[{80, {{10040,132},{1,6600000}}}]],
	[79] = [[{79, {{10040,130},{1,6500000}}}]],
	[78] = [[{78, {{10040,128},{1,6400000}}}]],
	[77] = [[{77, {{10040,126},{1,6300000}}}]],
	[76] = [[{76, {{10040,124},{1,6200000}}}]],
	[75] = [[{75, {{10040,122},{1,6100000}}}]],
	[74] = [[{74, {{10040,120},{1,6000000}}}]],
	[73] = [[{73, {{10040,118},{1,5900000}}}]],
	[72] = [[{72, {{10040,116},{1,5800000}}}]],
	[71] = [[{71, {{10040,114},{1,5700000}}}]],
	[70] = [[{70, {{10040,112},{1,5600000}}}]],
	[69] = [[{69, {{10040,110},{1,5500000}}}]],
	[68] = [[{68, {{10040,108},{1,5400000}}}]],
	[67] = [[{67, {{10040,106},{1,5300000}}}]],
	[66] = [[{66, {{10040,104},{1,5200000}}}]],
	[65] = [[{65, {{10040,102},{1,5100000}}}]],
	[64] = [[{64, {{10040,100},{1,5000000}}}]],
	[63] = [[{63, {{10040,98},{1,4900000}}}]],
	[62] = [[{62, {{10040,96},{1,4800000}}}]],
	[61] = [[{61, {{10040,94},{1,4700000}}}]],
	[60] = [[{60, {{10040,92},{1,4600000}}}]],
	[59] = [[{59, {{10040,90},{1,4500000}}}]],
	[58] = [[{58, {{10040,88},{1,4400000}}}]],
	[57] = [[{57, {{10040,86},{1,4300000}}}]],
	[56] = [[{56, {{10040,84},{1,4200000}}}]],
	[55] = [[{55, {{10040,82},{1,4100000}}}]],
	[54] = [[{54, {{10040,80},{1,4000000}}}]],
	[53] = [[{53, {{10040,78},{1,3900000}}}]],
	[52] = [[{52, {{10040,76},{1,3800000}}}]],
	[51] = [[{51, {{10040,74},{1,3700000}}}]],
	[50] = [[{50, {{10040,72},{1,3600000}}}]],
	[49] = [[{49, {{10040,70},{1,3500000}}}]],
	[48] = [[{48, {{10040,68},{1,3400000}}}]],
	[47] = [[{47, {{10040,66},{1,3300000}}}]],
	[46] = [[{46, {{10040,64},{1,3200000}}}]],
	[45] = [[{45, {{10040,62},{1,3100000}}}]],
	[44] = [[{44, {{10040,60},{1,3000000}}}]],
	[43] = [[{43, {{10040,58},{1,2900000}}}]],
	[42] = [[{42, {{10040,56},{1,2800000}}}]],
	[41] = [[{41, {{10040,54},{1,2700000}}}]],
	[40] = [[{40, {{10040,52},{1,2600000}}}]],
	[39] = [[{39, {{10040,50},{1,2500000}}}]],
	[38] = [[{38, {{10040,48},{1,2400000}}}]],
	[37] = [[{37, {{10040,46},{1,2300000}}}]],
	[36] = [[{36, {{10040,44},{1,2200000}}}]],
	[35] = [[{35, {{10040,42},{1,2100000}}}]],
	[34] = [[{34, {{10040,40},{1,2000000}}}]],
	[33] = [[{33, {{10040,38},{1,1900000}}}]],
	[32] = [[{32, {{10040,36},{1,1800000}}}]],
	[31] = [[{31, {{10040,34},{1,1700000}}}]],
	[30] = [[{30, {{10040,32},{1,1600000}}}]],
	[29] = [[{29, {{10040,30},{1,1500000}}}]],
	[28] = [[{28, {{10040,28},{1,1400000}}}]],
	[27] = [[{27, {{10040,27},{1,1350000}}}]],
	[26] = [[{26, {{10040,26},{1,1300000}}}]],
	[25] = [[{25, {{10040,25},{1,1250000}}}]],
	[24] = [[{24, {{10040,24},{1,1200000}}}]],
	[23] = [[{23, {{10040,23},{1,1150000}}}]],
	[22] = [[{22, {{10040,22},{1,1100000}}}]],
	[21] = [[{21, {{10040,21},{1,1050000}}}]],
	[20] = [[{20, {{10040,20},{1,1000000}}}]],
	[19] = [[{19, {{10040,19},{1,950000}}}]],
	[18] = [[{18, {{10040,18},{1,900000}}}]],
	[17] = [[{17, {{10040,17},{1,850000}}}]],
	[16] = [[{16, {{10040,16},{1,800000}}}]],
	[15] = [[{15, {{10040,15},{1,750000}}}]],
	[14] = [[{14, {{10040,14},{1,700000}}}]],
	[13] = [[{13, {{10040,13},{1,650000}}}]],
	[12] = [[{12, {{10040,12},{1,600000}}}]],
	[11] = [[{11, {{10040,11},{1,550000}}}]],
	[10] = [[{10, {{10040,10},{1,500000}}}]],
	[9] = [[{9, {{10040,9},{1,450000}}}]],
	[8] = [[{8, {{10040,8},{1,400000}}}]],
	[7] = [[{7, {{10040,7},{1,350000}}}]],
	[6] = [[{6, {{10040,6},{1,300000}}}]],
	[5] = [[{5, {{10040,5},{1,250000}}}]],
	[4] = [[{4, {{10040,4},{1,200000}}}]],
	[3] = [[{3, {{10040,3},{1,150000}}}]],
	[2] = [[{2, {{10040,2},{1,100000}}}]],
	[1] = [[{1, {{10040,1},{1,50000}}}]]
}
-- -------------------tree_up_lv_end---------------------


-- -------------------tree_step_start-------------------
Config.SpriteData.data_tree_step_length = 8
Config.SpriteData.data_tree_step = {
	[0] = {count=0, lev_max=10, add_hp=1000, add_atk=1000, add_def=1000, add_speed=1000, all_attr={}, skill_num=1, expend={{10041,1},{10040,50}}, res_id=1, step_cond={{'role_lev',80}}},
	[1] = {count=1, lev_max=30, add_hp=1300, add_atk=1300, add_def=1000, add_speed=1000, all_attr={{'hp_max',700},{'atk',100},{'def',10},{'speed',5}}, skill_num=2, expend={{10041,2},{10040,100}}, res_id=2, step_cond={{'role_lev',80}}},
	[2] = {count=2, lev_max=50, add_hp=1690, add_atk=1690, add_def=1000, add_speed=1000, all_attr={{'hp_max',1400},{'atk',200},{'def',20},{'speed',10}}, skill_num=3, expend={{10041,3},{10040,150}}, res_id=3, step_cond={{'role_lev',80}}},
	[3] = {count=3, lev_max=80, add_hp=2197, add_atk=2197, add_def=1000, add_speed=1000, all_attr={{'hp_max',2100},{'atk',300},{'def',30},{'speed',15}}, skill_num=4, expend={{10041,4},{10040,200}}, res_id=4, step_cond={{'role_lev',90}}},
	[4] = {count=4, lev_max=110, add_hp=2856, add_atk=2856, add_def=1000, add_speed=1000, all_attr={{'hp_max',2800},{'atk',400},{'def',40},{'speed',20}}, skill_num=4, expend={{10041,6},{10040,250}}, res_id=5, step_cond={{'role_lev',100}}},
	[5] = {count=5, lev_max=140, add_hp=3712, add_atk=3712, add_def=1000, add_speed=1000, all_attr={{'hp_max',3500},{'atk',500},{'def',50},{'speed',25}}, skill_num=4, expend={{10041,8},{10040,300}}, res_id=6, step_cond={{'role_lev',115}}},
	[6] = {count=6, lev_max=170, add_hp=4825, add_atk=4825, add_def=1000, add_speed=1000, all_attr={{'hp_max',4200},{'atk',600},{'def',60},{'speed',30}}, skill_num=4, expend={{10041,10},{10040,350}}, res_id=6, step_cond={{'role_lev',130}}},
	[7] = {count=7, lev_max=200, add_hp=6272, add_atk=6272, add_def=1000, add_speed=1000, all_attr={{'hp_max',4900},{'atk',700},{'def',70},{'speed',35}}, skill_num=4, expend={}, res_id=6, step_cond={{'role_lev',150}}}
}
Config.SpriteData.data_tree_step_fun = function(key)
	local data=Config.SpriteData.data_tree_step[key]
	if DATA_DEBUG and data == nil then
		print('(Config.SpriteData.data_tree_step['..key..'])not found') return
	end
	return data
end
-- -------------------tree_step_end---------------------


-- -------------------tree_limit_start-------------------
Config.SpriteData.data_tree_limit_length = 4
Config.SpriteData.data_tree_limit = {
	[1] = 0,
	[2] = 1,
	[3] = 2,
	[4] = 3,
}
-- -------------------tree_limit_end---------------------


-- -------------------elfin_com_start-------------------
Config.SpriteData.data_elfin_com_length = 69
Config.SpriteData.data_elfin_com = {
	[111001] = {id=111001, expend={{111001,1},{10040,10}}, award=111101},
	[111002] = {id=111002, expend={{111002,1},{10040,10}}, award=111102},
	[111003] = {id=111003, expend={{111003,1},{10040,10}}, award=111103},
	[111004] = {id=111004, expend={{111004,1},{10040,10}}, award=111104},
	[111005] = {id=111005, expend={{111005,1},{10040,10}}, award=111105},
	[112001] = {id=112001, expend={{112001,1},{10040,10}}, award=112101},
	[112002] = {id=112002, expend={{112002,1},{10040,10}}, award=112102},
	[112003] = {id=112003, expend={{112003,1},{10040,10}}, award=112103},
	[112004] = {id=112004, expend={{112004,1},{10040,10}}, award=112104},
	[113001] = {id=113001, expend={{113001,1},{10040,10}}, award=113101},
	[113002] = {id=113002, expend={{113002,1},{10040,10}}, award=113102},
	[113003] = {id=113003, expend={{113003,1},{10040,10}}, award=113103},
	[113004] = {id=113004, expend={{113004,1},{10040,10}}, award=113104},
	[113005] = {id=113005, expend={{113005,1},{10040,10}}, award=113105},
	[113006] = {id=113006, expend={{113006,1},{10040,10}}, award=113106},
	[113007] = {id=113007, expend={{113007,1},{10040,10}}, award=113107},
	[113008] = {id=113008, expend={{113008,1},{10040,10}}, award=113108},
	[111101] = {id=111101, expend={{111001,2},{10040,40}}, award=111201},
	[111102] = {id=111102, expend={{111002,2},{10040,40}}, award=111202},
	[111103] = {id=111103, expend={{111003,2},{10040,40}}, award=111203},
	[111104] = {id=111104, expend={{111004,2},{10040,40}}, award=111204},
	[111105] = {id=111105, expend={{111005,2},{10040,40}}, award=111205},
	[112101] = {id=112101, expend={{112001,2},{10040,40}}, award=112201},
	[112102] = {id=112102, expend={{112002,2},{10040,40}}, award=112202},
	[112103] = {id=112103, expend={{112003,2},{10040,40}}, award=112203},
	[112104] = {id=112104, expend={{112004,2},{10040,40}}, award=112204},
	[113101] = {id=113101, expend={{113001,2},{10040,40}}, award=113201},
	[113102] = {id=113102, expend={{113002,2},{10040,40}}, award=113202},
	[113103] = {id=113103, expend={{113003,2},{10040,40}}, award=113203},
	[113104] = {id=113104, expend={{113004,2},{10040,40}}, award=113204},
	[113105] = {id=113105, expend={{113005,2},{10040,40}}, award=113205},
	[113106] = {id=113106, expend={{113006,2},{10040,40}}, award=113206},
	[113107] = {id=113107, expend={{113007,2},{10040,40}}, award=113207},
	[113108] = {id=113108, expend={{113008,2},{10040,40}}, award=113208},
	[111201] = {id=111201, expend={{111001,3},{10040,120}}, award=111301},
	[111202] = {id=111202, expend={{111002,3},{10040,120}}, award=111302},
	[111203] = {id=111203, expend={{111003,3},{10040,120}}, award=111303},
	[111204] = {id=111204, expend={{111004,3},{10040,120}}, award=111304},
	[111205] = {id=111205, expend={{111005,3},{10040,120}}, award=111305},
	[112201] = {id=112201, expend={{112001,3},{10040,120}}, award=112301},
	[112202] = {id=112202, expend={{112002,3},{10040,120}}, award=112302},
	[112203] = {id=112203, expend={{112003,3},{10040,120}}, award=112303},
	[112204] = {id=112204, expend={{112004,3},{10040,120}}, award=112304},
	[113201] = {id=113201, expend={{113001,3},{10040,120}}, award=113301},
	[113202] = {id=113202, expend={{113002,3},{10040,120}}, award=113302},
	[113203] = {id=113203, expend={{113003,3},{10040,120}}, award=113303},
	[113204] = {id=113204, expend={{113004,3},{10040,120}}, award=113304},
	[113205] = {id=113205, expend={{113005,3},{10040,120}}, award=113305},
	[113206] = {id=113206, expend={{113006,3},{10040,120}}, award=113306},
	[113207] = {id=113207, expend={{113007,3},{10040,120}}, award=113307},
	[113208] = {id=113208, expend={{113008,3},{10040,120}}, award=113308},
	[111301] = {id=111301, expend={{111001,4},{10040,240}}, award=111401},
	[111302] = {id=111302, expend={{111002,4},{10040,240}}, award=111402},
	[111303] = {id=111303, expend={{111003,4},{10040,240}}, award=111403},
	[111304] = {id=111304, expend={{111004,4},{10040,240}}, award=111404},
	[111305] = {id=111305, expend={{111005,4},{10040,240}}, award=111405},
	[112301] = {id=112301, expend={{112001,4},{10040,240}}, award=112401},
	[112302] = {id=112302, expend={{112002,4},{10040,240}}, award=112402},
	[112303] = {id=112303, expend={{112003,4},{10040,240}}, award=112403},
	[112304] = {id=112304, expend={{112004,4},{10040,240}}, award=112404},
	[113301] = {id=113301, expend={{113001,4},{10040,240}}, award=113401},
	[113302] = {id=113302, expend={{113002,4},{10040,240}}, award=113402},
	[113303] = {id=113303, expend={{113003,4},{10040,240}}, award=113403},
	[113304] = {id=113304, expend={{113004,4},{10040,240}}, award=113404},
	[113305] = {id=113305, expend={{113005,4},{10040,240}}, award=113405},
	[113306] = {id=113306, expend={{113006,4},{10040,240}}, award=113406},
	[113307] = {id=113307, expend={{113007,4},{10040,240}}, award=113407},
	[113308] = {id=113308, expend={{113008,4},{10040,240}}, award=113408},
	[10601] = {id=10601, expend={{10601,2},{1,100000}}, award=10602}
}
Config.SpriteData.data_elfin_com_fun = function(key)
	local data=Config.SpriteData.data_elfin_com[key]
	if DATA_DEBUG and data == nil then
		print('(Config.SpriteData.data_elfin_com['..key..'])not found') return
	end
	return data
end
-- -------------------elfin_com_end---------------------


-- -------------------elfin_reset_start-------------------
Config.SpriteData.data_elfin_reset_length = 1
Config.SpriteData.data_elfin_reset = {
	[17422] = {
		[113407] = {{camp_id=17422, id=113407, award={{39067,10},{10040,410},{113007,1}}}
		},
		[113307] = {{camp_id=17422, id=113307, award={{39067,6},{10040,170},{113007,1}}}
		},
		[113207] = {{camp_id=17422, id=113207, award={{39067,3},{10040,50},{113007,1}}}
		},
		[113107] = {{camp_id=17422, id=113107, award={{39067,1},{10040,10},{113007,1}}}
		},
		[113404] = {{camp_id=17422, id=113404, award={{39067,10},{10040,410},{113004,1}}}
		},
		[113304] = {{camp_id=17422, id=113304, award={{39067,6},{10040,170},{113004,1}}}
		},
		[113204] = {{camp_id=17422, id=113204, award={{39067,3},{10040,50},{113004,1}}}
		},
		[113104] = {{camp_id=17422, id=113104, award={{39067,1},{10040,10},{113004,1}}}
		},
	},
}
-- -------------------elfin_reset_end---------------------


-- -------------------elfin_plan_start-------------------
Config.SpriteData.data_elfin_plan_length = 8
Config.SpriteData.data_elfin_plan = {
	[1] = {id=1, name="方案1", flag=1, expend={}},
	[2] = {id=2, name="方案2", flag=1, expend={}},
	[3] = {id=3, name="方案3", flag=1, expend={}},
	[4] = {id=4, name="方案4", flag=0, expend={{3,300}}},
	[5] = {id=5, name="方案5", flag=0, expend={{3,400}}},
	[6] = {id=6, name="方案6", flag=0, expend={{3,500}}},
	[7] = {id=7, name="方案7", flag=0, expend={{3,600}}},
	[8] = {id=8, name="方案8", flag=0, expend={{3,700}}}
}
Config.SpriteData.data_elfin_plan_fun = function(key)
	local data=Config.SpriteData.data_elfin_plan[key]
	if DATA_DEBUG and data == nil then
		print('(Config.SpriteData.data_elfin_plan['..key..'])not found') return
	end
	return data
end
-- -------------------elfin_plan_end---------------------
