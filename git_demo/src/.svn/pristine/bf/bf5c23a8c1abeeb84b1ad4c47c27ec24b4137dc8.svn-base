-- --------------------------------------------------------------------
-- @description:
--      竖版伙伴装备信息面板
-- <br/> 2018年11月20日
-- --------------------------------------------------------------------
HeroMainTabEquipPanel = class("HeroMainTabEquipPanel", function()
    return ccui.Widget:create()
end)

local string_format = string.format
local controller = HeroController:getInstance()
local model = controller:getModel()
local table_insert = table.insert
local role_vo = RoleController:getInstance():getRoleVo()

function HeroMainTabEquipPanel:ctor()  
    self:config()
    self:layoutUI()
    self:registerEvents()
end
function HeroMainTabEquipPanel:config()
    --装备item 列表upo
    self.equip_item_list = {}

    self.equip_type_list = HeroConst.EquipPosList

    self.equip_icon_name_list = {
        [BackPackConst.item_type.WEAPON] = "hero_info_7",  --武器icon
        [BackPackConst.item_type.SHOE] = "hero_info_10",  --鞋子icon
        [BackPackConst.item_type.CLOTHES] = "hero_info_9",  --衣服icon 
        [BackPackConst.item_type.HAT] = "hero_info_8",  --裤子icon
        [5] = "hero_info_11", --武器icon--神器
        [6] = "hero_info_11", --武器icon
    }   

    --神器解锁条件
    self.artifact_lock_list = model.artifact_lock_list
end

function HeroMainTabEquipPanel:layoutUI()
    local csbPath = PathTool.getTargetCSB("hero/hero_main_tab_equip_panel")
    self.root_wnd = createCSBNote(csbPath)
    self:addChild(self.root_wnd)

    --读取文件的大小
    self.size = self.root_wnd:getContentSize()
    self:setContentSize(self.size)
    self.tab_panel = self.root_wnd:getChildByName("tab_panel")

    self.suit_panel = self.tab_panel:getChildByName("suit_panel")
    self.suit_panel:setVisible(false)
    self.suit_tLable = self.suit_panel:getChildByName("title_lable")
    self.suit_sLable1 = self.suit_panel:getChildByName("skill_lable1")
    self.suit_suitLable = self.suit_panel:getChildByName("suit_lable")
    self.suit_sLable2 = self.suit_panel:getChildByName("skill_lable2")
    self.suit_desLble= createRichLabel(22, cc.c3b(74,35,28), cc.p(0, 1), cc.p(160,130), 0, 0, 600)

    self.suit_panel:addChild(self.suit_desLble)
    self.suit_skillItem=self:createSkillItem(360,270)
 

    self.strong_panel = self.root_wnd:getChildByName("strong_panel")
    self.awake_panel = self.root_wnd:getChildByName("awake_panel")
    self.background = self.root_wnd:getChildByName("background")
    
    self.power_click = self.tab_panel:getChildByName("power_click")
    self.fight_label = CommonNum.new(101, self.power_click, 99999, - 2, cc.p(0.5, 0.5))
    self.fight_label:setPosition(self.power_click:getContentSize().width/2,self.power_click:getContentSize().height/2 +10) 

    self.equip_node_list = {}
    for i=1,4 do
        local equip_type = self.equip_type_list[i] or i
        self.equip_node_list[i] = self.tab_panel:getChildByName("equip_node"..i)

        local item = BackPackItem.new(false,true,nil,0.8,false)
        -- 引导需要
        item:setName("guidesign_equip_item_"..i)
        self.equip_node_list[i]:addChild(item,1)
        item:setPosition(cc.p(0,0))
        item:addCallBack(function() self:selectEquipByIndex(equip_type) end)
        local res= PathTool.getResFrame("hero",self.equip_icon_name_list[equip_type])
        local empty_icon = createImage(item:getRoot(), res,60,60, cc.p(0.5,0.5), true, 10, false)
        item.empty_icon = empty_icon
        if i >= 5 then
            -- item:setBackgroundOpacity(0)
        end
        self.equip_item_list[equip_type] = item
    end
    self.key_up_btn = self.tab_panel:getChildByName("key_up_btn")
    self.key_up_btn:getChildByName("label"):setString(TI18N("一键穿戴"))
    self.key_up_btn:setVisible(false)
    self.discharge_btn = self.tab_panel:getChildByName("discharge_btn")
    self.discharge_btn:getChildByName("label"):setString(TI18N("一键卸下"))
    self.discharge_btn:setVisible(false)

    self.tab_list = {}
    local tab_btn_obj = self.root_wnd:getChildByName('tab_btn')
    for i=1,3 do
        local tab_btn = {}
        local item = tab_btn_obj:getChildByName("tab_btn_"..i)
        tab_btn.btn = item
        tab_btn.index = i
        tab_btn.select_bg = item:getChildByName("select_img")
        tab_btn.select_bg:setVisible(false)

        tab_btn.red_point = item:getChildByName("red_point")
        tab_btn.red_point:setVisible(false)


        self.tab_list[i] = tab_btn
    end



    self:changeTabType(1)
end



function HeroMainTabEquipPanel:updatePower()
    self.fight_label:setNum(self.hero_vo.power)
end

-- @_type 参考 HeroConst.MainInfoTab 定义
function HeroMainTabEquipPanel:changeTabType(index)

    if self.cur_tab_index == index then return end

    if self.cur_tab ~= nil then
        self.cur_tab.select_bg:setVisible(false)
    end
    self.cur_tab_index = index

    self.cur_tab = self.tab_list[self.cur_tab_index]

    if self.cur_tab ~= nil then
        self.cur_tab.select_bg:setVisible(true)
    end

    self.tab_panel:setVisible(false)
    self.strong_panel:setVisible(false)
    self.awake_panel:setVisible(false)
    
    local bg_res
    if self.cur_tab_index == 1 then
        self.tab_panel:setVisible(true)
        bg_res  = PathTool.getSingleImgForDownLoad("bigbg", "hl_bigbg_44", false)
    elseif self.cur_tab_index == 2 then
        self.strong_panel:setVisible(true)
        bg_res  = PathTool.getSingleImgForDownLoad("bigbg", "hl_bigbg_43", false)
    elseif self.cur_tab_index == 3 then
        self.awake_panel:setVisible(true)
        bg_res  = PathTool.getSingleImgForDownLoad("bigbg", "hl_bigbg_42", false)
    end
    self.item_load = loadImageTextureFromCDN(self.background, bg_res, ResourcesType.single, self.item_load) 
    --处理红点
    --self:updatePageRedPoint()
end

--事件
function HeroMainTabEquipPanel:registerEvents()

    for index, tab_btn in ipairs(self.tab_list) do
        registerButtonEventListener(tab_btn.btn, function() self:changeTabType(index) end ,false, 1) 
    end


    registerButtonEventListener(self.key_up_btn, function() self:onClickKeyUpBtn()  end ,true)
    registerButtonEventListener(self.discharge_btn, function() self:onClickDischargeBtn()  end ,true)



    --英雄信息更新
    EventManager:getInstance():Bind(HeroEvent.Equip_Update_Event,self, function()
        if not self.hero_vo then return end
        self:updateInfo(self.hero_vo)
        self:updateOneKeyBtnStatus()

    end)
    --红点更新事件..英雄信息更新和 背包的信息更新 才能判断红点
    EventManager:getInstance():Bind(HeroEvent.Equip_RedPoint_Event,self, function()
        if not self.hero_vo then return end
        self:updateRedPoint()
        self:updateOneKeyBtnStatus()
    end)

    --神器信息
    EventManager:getInstance():Bind(HeroEvent.Artifact_Update_Event,self, function(vo)
        if not self.hero_vo then return end
        self:updatePower()
    end)

    --神装更新
    EventManager:getInstance():Bind(HeroEvent.Holy_Equipment_Update_Event,self, function()
        self:updatePower()
    end)

    EventManager:getInstance():Bind(HeroEvent.Hero_Detail_Data_Update,self, function(hero_vo)
        if not hero_vo then return end
        if hero_vo.partner_id == self.hero_vo.partner_id then
            self:setData(self.hero_vo)
        end
    end)
end

-- 更新一键穿戴/卸下按钮显示
function HeroMainTabEquipPanel:updateOneKeyBtnStatus(  )
    if self.hero_vo and self.hero_vo.eqm_list then
        -- 装备有红点时，或者没穿戴任何装备时，显示一键穿戴，否则显示一键卸下
        if self.is_btn_redpoint or tableLen(self.hero_vo.eqm_list) <= 0 then
            self.key_up_btn:setVisible(true)
            self.discharge_btn:setVisible(false)
        else
            self.key_up_btn:setVisible(false)
            self.discharge_btn:setVisible(true)
        end
    else
        self.key_up_btn:setVisible(false)
        self.discharge_btn:setVisible(false)
    end
end

--一键穿戴
function HeroMainTabEquipPanel:onClickKeyUpBtn()
    if not self.hero_vo then return end
    controller:sender11010(self.hero_vo.partner_id, 0)
end

-- 一键卸下
function HeroMainTabEquipPanel:onClickDischargeBtn(  )
    if not self.hero_vo then return end
    controller:sender11011(self.hero_vo.partner_id, 0)
end

--@ index 索引  如果是装备可以是装备类型 equip_type
function HeroMainTabEquipPanel:selectEquipByIndex(index)
    if not self.hero_vo then return end
    if index == 5 or index == 6 then
        --5 ,6 是神器的位置
        local pos = index - 4
        local equip_vo = self.hero_vo.artifact_list[pos]
        --策划要求 原本 6星解锁 改成 7星解锁 .原本6星的已有数据的保留
        if equip_vo == nil then
            local artifact_lock = self.artifact_lock_list[pos]
            if artifact_lock then
                if artifact_lock[1] == 'lev' then
                    if self.hero_vo.lev < artifact_lock[2] then
                        message(string_format( TI18N("英雄%s级解锁"),artifact_lock[2]))
                        return 
                    end
                elseif artifact_lock[1] == 'star' then
                    if self.hero_vo.star < artifact_lock[2] then
                        message(string_format( TI18N("英雄%s星解锁"),artifact_lock[2]))
                        return
                    end
                end
            end
        end

        -- local equip_vo = self.hero_vo.artifact_list[pos]
        --默认都是主神器 
        if equip_vo and next(equip_vo) ~=nil then 
            controller:openArtifactTipsWindow(true, equip_vo, PartnerConst.ArtifactTips.partner, self.hero_vo.partner_id, pos, self.lock_list[pos])
        else
            controller:openArtifactListWindow(true, pos, self.hero_vo.partner_id)
        end
    else
        local equip_type = index
        local equip_list = model:getHeroEquipList(self.hero_vo.partner_id)
        local equip_vo = equip_list[equip_type]
        if equip_vo ~= nil then
            controller:openEquipTips(true, equip_vo, PartnerConst.EqmTips.partner, self.hero_vo) 
        else
            controller:openEquipPanel(true,equip_type,self.hero_vo.partner_id)
        end
    end
end


function HeroMainTabEquipPanel:setData(hero_vo)
    if not hero_vo then return end
    self.hero_vo = hero_vo
    self:updateInfo(hero_vo)
    self:updateRedPoint()
    self:updateOneKeyBtnStatus()
end

function HeroMainTabEquipPanel:updateRedPoint()
    --按钮的红点
    local is_btn_redpoint = false
    --装备红点
    for i,equip_type in ipairs(self.equip_type_list) do
        local is_redpoint = self:updateEachEquipRedPoint(equip_type)
        if not is_btn_redpoint then
            is_btn_redpoint = is_redpoint
        end
    end

    if is_btn_redpoint then
        -- self.key_up_btn:setVisible(true)
        addRedPointToNodeByStatus(self.key_up_btn, is_btn_redpoint, 5, 5)
        -- if self.power_click then
        --     self.power_click:setVisible(false)
        -- end
    else
        addRedPointToNodeByStatus(self.key_up_btn, is_btn_redpoint, 5, 5)
        -- if self.power_click then
        --     self.power_click:setVisible(true)
        -- end
        -- self.key_up_btn:setVisible(false)
    end
    self.is_btn_redpoint = is_btn_redpoint
end

--更新圣器的红点
function HeroMainTabEquipPanel:updateArtifactRedPoint()
    --符文(神器) 红点
    if self.lock_list then
        for i,v in ipairs(self.artifact_lock_list) do
            if not self.lock_list[i] then
                local equip_vo = self.hero_vo.artifact_list[i]
                local is_redpoint = HeroCalculate.checkSingleArtifactRedPoint(equip_vo)
                local item = self.equip_item_list[i+4]
                -- item:showRedPoint(is_redpoint)
                addRedPointToNodeByStatus(self.img_box[i], is_redpoint, -1, -10)
                if self.img_box[i].red_point then
                    self.img_box[i].red_point:setScale(0.8 * 100/95)
                end
            else
                addRedPointToNodeByStatus(self.img_box[i], false)    
            end
        end
    end
end

--更新每一个装备红点
function HeroMainTabEquipPanel:updateEachEquipRedPoint(equip_type)
    local equip_list = model:getHeroEquipList(self.hero_vo.partner_id)
    local item = self.equip_item_list[equip_type]
    local is_redpoint = HeroCalculate.checkSingleHeroEachPosEquipRedPoint(equip_type, equip_list[equip_type])
    item:showRedPoint(is_redpoint)
    return is_redpoint
end

function HeroMainTabEquipPanel:updateInfo(hero_vo)
    if not hero_vo then return end
    --装备信息
    local equip_list = model:getHeroEquipList(hero_vo.partner_id)
    for i,_type in ipairs(self.equip_type_list) do
        local equip_vo = equip_list[_type]
        local item = self.equip_item_list[_type]
        if equip_vo then
            item:setData(equip_vo)
            if item.empty_icon then 
                item.empty_icon:setVisible(false)
            end
            item.equip_vo = equip_vo
        else
            item:setData()
            if item.empty_icon then 
                item.empty_icon:setVisible(true)
            end
            item.equip_vo = nil
            item:setBackgroundRes(PathTool.getResFrame("hero", "hero_info_32"))
        end
        -- item:setBackgroundRes(PathTool.getResFrame("hero", "hero_info_32"))
    end
    self:updatePower()
    self:updateEquipSuit(hero_vo)
end

-- 更新套装属性
function HeroMainTabEquipPanel:createSkillItem(x, y)
  local item =  SkillItem.new(true,false,true,0.8, true)
  self.suit_panel:addChild(item)
  item:setPosition( x, y)
  return item
end
function HeroMainTabEquipPanel:updateEquipSuit(hero_vo)


    local suitList=model:getEquipSuit(hero_vo)
    if suitList and #suitList>0 then
       local suit_configs = Config.PartnerEqmData.data_eqm_suit[suitList[1]]

       for i=1,#suit_configs do
           if suit_configs[i].num==suitList[2] then
            local config=suit_configs[i]
            local skill_config = Config.SkillData.data_get_skill(config.skill_id)
            local suit_des="拥有"..suitList[2].."件"..config.abb_name.."装备可激活"
            local pSize=self.tab_panel:getContentSize()
            self.suit_tLable:setString(config.name)
            self.suit_suitLable:setString(suit_des)
            self.suit_sLable1:setString(skill_config.name)
            self.suit_sLable2:setString("["..skill_config.name.."]")
          self.suit_desLble:setString(skill_config.skill_desc)  

            self.suit_skillItem:setData(skill_config)
            self.suit_panel:setVisible(true)
            return
          end
        end
    end

self.suit_panel:setVisible(false)
end




function HeroMainTabEquipPanel:setVisibleStatus(bool)
    self:setVisible(bool)
end


--移除
function HeroMainTabEquipPanel:DeleteMe()
    EventManager:getInstance():UnBind(self)
end
